# This is a basic workflow to help you get started with Actions

name: Trigger Integration Deployment script

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "beta", "stage", "preview" ]
    paths: ["Collection_Backups/*"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest

    steps:
      # Fetch-depth 2 ensures we can access latest commit
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set variables
        run: |
          collectionPath=$(echo $(git diff-tree --no-commit-id --name-only -r $GITHUB_REF))
          fileName=$(echo "$collectionPath" | sed -r "s/.+\/(.+)\..+/\1/")
          echo "integrationClassId=$fileName" >> $GITHUB_ENV
          echo "envName=$GITHUB_REF_NAME" >> $GITHUB_ENV
          echo "envCheck=${{ vars.REPO_VAR }}" >> $GITHUB_ENV

      - name: Set API Key Beta
        if: env.envName == 'beta'
        run: echo "apiKey=${{ secrets.BETA_API_KEY}}" >> $GITHUB_ENV

      - name: Set API Key Stage
        if: env.envName == 'stage'
        run: echo "apiKey=${{ secrets.STAGE_API_KEY}}" >> $GITHUB_ENV
      
      - name: Set API Key Preview
        if: env.envName == 'preview'
        run: echo "apiKey=${{ secrets.PREVIEW_API_KEY}}" >> $GITHUB_ENV

      # Runs a set of commands using the runners shell
      - name: Run deployment script
        run: |
          npm i
          node index.js -e $envName -i $integrationClassId -k $apiKey


      - name: Commit to file
        run: | 
          echo "New line" >> ./integrationConfig.js

      - uses: EndBug/add-and-commit@v9
        with:
          message: "Update config"
          add: "integrationConfig.js"


        